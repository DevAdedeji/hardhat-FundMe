{
  "address": "0xa5EFF326BB602fe9DcDDfEafA2b2d8a1A39A5787",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe4cab633d2d5537ae21bbe5c064663a77559c850d5fa0bc97cd34d7da6e9858c",
  "receipt": {
    "to": null,
    "from": "0x598f7b99383B42c4e5888953066fB21706A207D9",
    "contractAddress": "0xa5EFF326BB602fe9DcDDfEafA2b2d8a1A39A5787",
    "transactionIndex": 43,
    "gasUsed": "812615",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xb9b191aadb5da679194f530bdbcf0ff7d76e833f54d2e92acd7255f7134019e8",
    "transactionHash": "0xe4cab633d2d5537ae21bbe5c064663a77559c850d5fa0bc97cd34d7da6e9858c",
    "logs": [],
    "blockNumber": 4940055,
    "cumulativeGasUsed": "6520161",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "03dabb9426beeec3117ceb774e0d9b5b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint public constant minimumUsd = 10 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minimumUsd,\\n            \\\"You should send atleast I eth\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        funders = new address[](0);\\n        // send eth\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x099f179326bc12161488d94894b44e03c67261854916de84b1536a0f83590f34\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc53358f9d0e8e31494abb19c3b500bcc73d0ab3226489296aebc4f817dc839c6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610eae380380610eae83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d4f61015f600039600081816102df015261055d0152610d4f6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061074b565b60405180910390f35b3480156100c457600080fd5b506100cd6102dd565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107c9565b61051d565b604051610103919061074b565b60405180910390f35b34801561011857600080fd5b50610121610535565b60405161012e9190610855565b60405180910390f35b34801561014357600080fd5b5061014c61055b565b604051610159919061087f565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108c6565b61057f565b6040516101a0919061087f565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105be90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610950565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b678ac7230489e8000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610362576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040d57600080828154811061038757610386610970565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610405906109ce565b915050610365565b50600067ffffffffffffffff81111561042957610428610a16565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506000908051906020019061046d92919061068b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610a76565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610ad7565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ca836105fa565b90506000670de0b6b3a764000085836105e39190610af7565b6105ed9190610b68565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c9190610c26565b5050509150506402540be400816106839190610ca1565b915050919050565b828054828255906000526020600020908101928215610704579160200282015b828111156107035782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ab565b5b5090506107119190610715565b5090565b5b8082111561072e576000816000905550600101610716565b5090565b6000819050919050565b61074581610732565b82525050565b6000602082019050610760600083018461073c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107968261076b565b9050919050565b6107a68161078b565b81146107b157600080fd5b50565b6000813590506107c38161079d565b92915050565b6000602082840312156107df576107de610766565b5b60006107ed848285016107b4565b91505092915050565b6000819050919050565b600061081b6108166108118461076b565b6107f6565b61076b565b9050919050565b600061082d82610800565b9050919050565b600061083f82610822565b9050919050565b61084f81610834565b82525050565b600060208201905061086a6000830184610846565b92915050565b6108798161078b565b82525050565b60006020820190506108946000830184610870565b92915050565b6108a381610732565b81146108ae57600080fd5b50565b6000813590506108c08161089a565b92915050565b6000602082840312156108dc576108db610766565b5b60006108ea848285016108b1565b91505092915050565b600082825260208201905092915050565b7f596f752073686f756c642073656e642061746c65617374204920657468000000600082015250565b600061093a601d836108f3565b915061094582610904565b602082019050919050565b600060208201905081810360008301526109698161092d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d982610732565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a0b57610a0a61099f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a60600083610a45565b9150610a6b82610a50565b600082019050919050565b6000610a8182610a53565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac1600b836108f3565b9150610acc82610a8b565b602082019050919050565b60006020820190508181036000830152610af081610ab4565b9050919050565b6000610b0282610732565b9150610b0d83610732565b9250828202610b1b81610732565b91508282048414831517610b3257610b3161099f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7382610732565b9150610b7e83610732565b925082610b8e57610b8d610b39565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb881610b99565b8114610bc357600080fd5b50565b600081519050610bd581610baf565b92915050565b6000819050919050565b610bee81610bdb565b8114610bf957600080fd5b50565b600081519050610c0b81610be5565b92915050565b600081519050610c208161089a565b92915050565b600080600080600060a08688031215610c4257610c41610766565b5b6000610c5088828901610bc6565b9550506020610c6188828901610bfc565b9450506040610c7288828901610c11565b9350506060610c8388828901610c11565b9250506080610c9488828901610bc6565b9150509295509295909350565b6000610cac82610bdb565b9150610cb783610bdb565b9250828202610cc581610bdb565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cfd57610cfc61099f565b5b8282058414831517610d1257610d1161099f565b5b509291505056fea2646970667358221220b7cb234fda7af60082d4a4c2ce25f0c7d3f55db3a6553492b3aa23fd9d2c8f2b64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b6040516100af919061074b565b60405180910390f35b3480156100c457600080fd5b506100cd6102dd565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107c9565b61051d565b604051610103919061074b565b60405180910390f35b34801561011857600080fd5b50610121610535565b60405161012e9190610855565b60405180910390f35b34801561014357600080fd5b5061014c61055b565b604051610159919061087f565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108c6565b61057f565b6040516101a0919061087f565b60405180910390f35b678ac7230489e800006101e7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105be90919063ffffffff16565b1015610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610950565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b678ac7230489e8000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610362576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040d57600080828154811061038757610386610970565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610405906109ce565b915050610365565b50600067ffffffffffffffff81111561042957610428610a16565b5b6040519080825280602002602001820160405280156104575781602001602082028036833780820191505090505b506000908051906020019061046d92919061068b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049490610a76565b60006040518083038185875af1925050503d80600081146104d1576040519150601f19603f3d011682016040523d82523d6000602084013e6104d6565b606091505b505090508061051a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051190610ad7565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ca836105fa565b90506000670de0b6b3a764000085836105e39190610af7565b6105ed9190610b68565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c9190610c26565b5050509150506402540be400816106839190610ca1565b915050919050565b828054828255906000526020600020908101928215610704579160200282015b828111156107035782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ab565b5b5090506107119190610715565b5090565b5b8082111561072e576000816000905550600101610716565b5090565b6000819050919050565b61074581610732565b82525050565b6000602082019050610760600083018461073c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107968261076b565b9050919050565b6107a68161078b565b81146107b157600080fd5b50565b6000813590506107c38161079d565b92915050565b6000602082840312156107df576107de610766565b5b60006107ed848285016107b4565b91505092915050565b6000819050919050565b600061081b6108166108118461076b565b6107f6565b61076b565b9050919050565b600061082d82610800565b9050919050565b600061083f82610822565b9050919050565b61084f81610834565b82525050565b600060208201905061086a6000830184610846565b92915050565b6108798161078b565b82525050565b60006020820190506108946000830184610870565b92915050565b6108a381610732565b81146108ae57600080fd5b50565b6000813590506108c08161089a565b92915050565b6000602082840312156108dc576108db610766565b5b60006108ea848285016108b1565b91505092915050565b600082825260208201905092915050565b7f596f752073686f756c642073656e642061746c65617374204920657468000000600082015250565b600061093a601d836108f3565b915061094582610904565b602082019050919050565b600060208201905081810360008301526109698161092d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d982610732565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a0b57610a0a61099f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a60600083610a45565b9150610a6b82610a50565b600082019050919050565b6000610a8182610a53565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac1600b836108f3565b9150610acc82610a8b565b602082019050919050565b60006020820190508181036000830152610af081610ab4565b9050919050565b6000610b0282610732565b9150610b0d83610732565b9250828202610b1b81610732565b91508282048414831517610b3257610b3161099f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7382610732565b9150610b7e83610732565b925082610b8e57610b8d610b39565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb881610b99565b8114610bc357600080fd5b50565b600081519050610bd581610baf565b92915050565b6000819050919050565b610bee81610bdb565b8114610bf957600080fd5b50565b600081519050610c0b81610be5565b92915050565b600081519050610c208161089a565b92915050565b600080600080600060a08688031215610c4257610c41610766565b5b6000610c5088828901610bc6565b9550506020610c6188828901610bfc565b9450506040610c7288828901610c11565b9350506060610c8388828901610c11565b9250506080610c9488828901610bc6565b9150509295509295909350565b6000610cac82610bdb565b9150610cb783610bdb565b9250828202610cc581610bdb565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cfd57610cfc61099f565b5b8282058414831517610d1257610d1161099f565b5b509291505056fea2646970667358221220b7cb234fda7af60082d4a4c2ce25f0c7d3f55db3a6553492b3aa23fd9d2c8f2b64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}