{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funderAdress",
          "type": "address"
        }
      ],
      "name": "getAmountAdded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "funderIndex",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x536c5847827bf42bc05480e8b66ceebeb2d63396a639a953459c9111976cf969",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "968437",
    "logsBloom": "0x
    "blockHash": "0x7c048cd74d32e3a65e310ba831d1b34cd852049d187518d963569d6ef5d77b8c",
    "transactionHash": "0x536c5847827bf42bc05480e8b66ceebeb2d63396a639a953459c9111976cf969",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "968437",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "083e853c86772c42f950229cdc7f9611",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funderAdress\",\"type\":\"address\"}],\"name\":\"getAmountAdded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"funderIndex\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Adedeji Tewogbade\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"},\"withdraw()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds our countract\"},\"withdraw()\":{\"notice\":\"This function withdraw the funds in the contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crowd funding\\n *  @author Adedeji Tewogbade\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint public constant MINIMUM_USD = 10 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    /**\\n     * @notice This function funds our countract\\n     * @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You should send atleast I eth\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    /**\\n     * @notice This function withdraw the funds in the contract\\n     * @dev This implements price feeds as our library\\n     */\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        s_funders = new address[](0);\\n        // send eth\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        s_funders = new address[](0);\\n        // send eth\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 funderIndex) public view returns (address) {\\n        return s_funders[funderIndex];\\n    }\\n\\n    function getAmountAdded(\\n        address funderAdress\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funderAdress];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x020f383a2382e71ad9265392b4359c0b106dd0973ee2687b38b21cd1db9deb03\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc53358f9d0e8e31494abb19c3b500bcc73d0ab3226489296aebc4f817dc839c6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200119d3803806200119d83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051611024620001796000396000818161019b0152818161043201526105aa01526110246000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80633ccfd60b146100805780636adadb371461008a5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b610088610199565b005b34801561009657600080fd5b506100b160048036038101906100ac9190610a6a565b6103d9565b6040516100be9190610ab0565b60405180910390f35b3480156100d357600080fd5b506100dc610422565b6040516100e99190610ab0565b60405180910390f35b3480156100fe57600080fd5b5061010761042e565b6040516101149190610ada565b60405180910390f35b34801561012957600080fd5b50610132610456565b60405161013f9190610b54565b60405180910390f35b610150610480565b005b61015a6105a8565b005b34801561016857600080fd5b50610183600480360381019061017e9190610b9b565b61084c565b6040516101909190610ada565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156102c957600080828154811061024357610242610bc8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102c190610c26565b915050610221565b50600067ffffffffffffffff8111156102e5576102e4610c6e565b5b6040519080825280602002602001820160405280156103135781602001602082028036833780820191505090505b5060009080519060200190610329929190610960565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035090610cce565b60006040518083038185875af1925050503d806000811461038d576040519150601f19603f3d011682016040523d82523d6000602084013e610392565b606091505b50509050806103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610d40565b60405180910390fd5b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b678ac7230489e800006104be600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089390919063ffffffff16565b10156104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690610dac565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106b057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610666575b5050505050905060005b815181101561073b5760008282815181106106d8576106d7610bc8565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073390610c26565b9150506106ba565b50600067ffffffffffffffff81111561075757610756610c6e565b5b6040519080825280602002602001820160405280156107855781602001602082028036833780820191505090505b506000908051906020019061079b929190610960565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107c290610cce565b60006040518083038185875af1925050503d80600081146107ff576040519150601f19603f3d011682016040523d82523d6000602084013e610804565b606091505b5050905080610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90610d40565b60405180910390fd5b5050565b600080828154811061086157610860610bc8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061089f836108cf565b90506000670de0b6b3a764000085836108b89190610dcc565b6108c29190610e3d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561091d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109419190610efb565b5050509150506402540be400816109589190610f76565b915050919050565b8280548282559060005260206000209081019282156109d9579160200282015b828111156109d85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610980565b5b5090506109e691906109ea565b5090565b5b80821115610a035760008160009055506001016109eb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3782610a0c565b9050919050565b610a4781610a2c565b8114610a5257600080fd5b50565b600081359050610a6481610a3e565b92915050565b600060208284031215610a8057610a7f610a07565b5b6000610a8e84828501610a55565b91505092915050565b6000819050919050565b610aaa81610a97565b82525050565b6000602082019050610ac56000830184610aa1565b92915050565b610ad481610a2c565b82525050565b6000602082019050610aef6000830184610acb565b92915050565b6000819050919050565b6000610b1a610b15610b1084610a0c565b610af5565b610a0c565b9050919050565b6000610b2c82610aff565b9050919050565b6000610b3e82610b21565b9050919050565b610b4e81610b33565b82525050565b6000602082019050610b696000830184610b45565b92915050565b610b7881610a97565b8114610b8357600080fd5b50565b600081359050610b9581610b6f565b92915050565b600060208284031215610bb157610bb0610a07565b5b6000610bbf84828501610b86565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3182610a97565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c6357610c62610bf7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb8600083610c9d565b9150610cc382610ca8565b600082019050919050565b6000610cd982610cab565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d2a600b83610ce3565b9150610d3582610cf4565b602082019050919050565b60006020820190508181036000830152610d5981610d1d565b9050919050565b7f596f752073686f756c642073656e642061746c65617374204920657468000000600082015250565b6000610d96601d83610ce3565b9150610da182610d60565b602082019050919050565b60006020820190508181036000830152610dc581610d89565b9050919050565b6000610dd782610a97565b9150610de283610a97565b9250828202610df081610a97565b91508282048414831517610e0757610e06610bf7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e4882610a97565b9150610e5383610a97565b925082610e6357610e62610e0e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e8d81610e6e565b8114610e9857600080fd5b50565b600081519050610eaa81610e84565b92915050565b6000819050919050565b610ec381610eb0565b8114610ece57600080fd5b50565b600081519050610ee081610eba565b92915050565b600081519050610ef581610b6f565b92915050565b600080600080600060a08688031215610f1757610f16610a07565b5b6000610f2588828901610e9b565b9550506020610f3688828901610ed1565b9450506040610f4788828901610ee6565b9350506060610f5888828901610ee6565b9250506080610f6988828901610e9b565b9150509295509295909350565b6000610f8182610eb0565b9150610f8c83610eb0565b9250828202610f9a81610eb0565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fd257610fd1610bf7565b5b8282058414831517610fe757610fe6610bf7565b5b509291505056fea2646970667358221220f3235430e7ba4ecf56512c4f58e014480183ca25ed647151a5253552555db12b64736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80633ccfd60b146100805780636adadb371461008a5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b610088610199565b005b34801561009657600080fd5b506100b160048036038101906100ac9190610a6a565b6103d9565b6040516100be9190610ab0565b60405180910390f35b3480156100d357600080fd5b506100dc610422565b6040516100e99190610ab0565b60405180910390f35b3480156100fe57600080fd5b5061010761042e565b6040516101149190610ada565b60405180910390f35b34801561012957600080fd5b50610132610456565b60405161013f9190610b54565b60405180910390f35b610150610480565b005b61015a6105a8565b005b34801561016857600080fd5b50610183600480360381019061017e9190610b9b565b61084c565b6040516101909190610ada565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156102c957600080828154811061024357610242610bc8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102c190610c26565b915050610221565b50600067ffffffffffffffff8111156102e5576102e4610c6e565b5b6040519080825280602002602001820160405280156103135781602001602082028036833780820191505090505b5060009080519060200190610329929190610960565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035090610cce565b60006040518083038185875af1925050503d806000811461038d576040519150601f19603f3d011682016040523d82523d6000602084013e610392565b606091505b50509050806103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610d40565b60405180910390fd5b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b678ac7230489e800006104be600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089390919063ffffffff16565b10156104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690610dac565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106b057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610666575b5050505050905060005b815181101561073b5760008282815181106106d8576106d7610bc8565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061073390610c26565b9150506106ba565b50600067ffffffffffffffff81111561075757610756610c6e565b5b6040519080825280602002602001820160405280156107855781602001602082028036833780820191505090505b506000908051906020019061079b929190610960565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107c290610cce565b60006040518083038185875af1925050503d80600081146107ff576040519150601f19603f3d011682016040523d82523d6000602084013e610804565b606091505b5050905080610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90610d40565b60405180910390fd5b5050565b600080828154811061086157610860610bc8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061089f836108cf565b90506000670de0b6b3a764000085836108b89190610dcc565b6108c29190610e3d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561091d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109419190610efb565b5050509150506402540be400816109589190610f76565b915050919050565b8280548282559060005260206000209081019282156109d9579160200282015b828111156109d85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610980565b5b5090506109e691906109ea565b5090565b5b80821115610a035760008160009055506001016109eb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3782610a0c565b9050919050565b610a4781610a2c565b8114610a5257600080fd5b50565b600081359050610a6481610a3e565b92915050565b600060208284031215610a8057610a7f610a07565b5b6000610a8e84828501610a55565b91505092915050565b6000819050919050565b610aaa81610a97565b82525050565b6000602082019050610ac56000830184610aa1565b92915050565b610ad481610a2c565b82525050565b6000602082019050610aef6000830184610acb565b92915050565b6000819050919050565b6000610b1a610b15610b1084610a0c565b610af5565b610a0c565b9050919050565b6000610b2c82610aff565b9050919050565b6000610b3e82610b21565b9050919050565b610b4e81610b33565b82525050565b6000602082019050610b696000830184610b45565b92915050565b610b7881610a97565b8114610b8357600080fd5b50565b600081359050610b9581610b6f565b92915050565b600060208284031215610bb157610bb0610a07565b5b6000610bbf84828501610b86565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3182610a97565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c6357610c62610bf7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cb8600083610c9d565b9150610cc382610ca8565b600082019050919050565b6000610cd982610cab565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d2a600b83610ce3565b9150610d3582610cf4565b602082019050919050565b60006020820190508181036000830152610d5981610d1d565b9050919050565b7f596f752073686f756c642073656e642061746c65617374204920657468000000600082015250565b6000610d96601d83610ce3565b9150610da182610d60565b602082019050919050565b60006020820190508181036000830152610dc581610d89565b9050919050565b6000610dd782610a97565b9150610de283610a97565b9250828202610df081610a97565b91508282048414831517610e0757610e06610bf7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e4882610a97565b9150610e5383610a97565b925082610e6357610e62610e0e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e8d81610e6e565b8114610e9857600080fd5b50565b600081519050610eaa81610e84565b92915050565b6000819050919050565b610ec381610eb0565b8114610ece57600080fd5b50565b600081519050610ee081610eba565b92915050565b600081519050610ef581610b6f565b92915050565b600080600080600060a08688031215610f1757610f16610a07565b5b6000610f2588828901610e9b565b9550506020610f3688828901610ed1565b9450506040610f4788828901610ee6565b9350506060610f5888828901610ee6565b9250506080610f6988828901610e9b565b9150509295509295909350565b6000610f8182610eb0565b9150610f8c83610eb0565b9250828202610f9a81610eb0565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fd257610fd1610bf7565b5b8282058414831517610fe757610fe6610bf7565b5b509291505056fea2646970667358221220f3235430e7ba4ecf56512c4f58e014480183ca25ed647151a5253552555db12b64736f6c63430008130033",
  "devdoc": {
    "author": "Adedeji Tewogbade",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      },
      "withdraw()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds our countract"
      },
      "withdraw()": {
        "notice": "This function withdraw the funds in the contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}